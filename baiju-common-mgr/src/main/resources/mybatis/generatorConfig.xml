<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 引入配置文件，注意位置，是相对路径，相对于项目目录而言-->
    <properties resource="application.properties"/>

    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="javaFileEncoding" value="UTF-8"/>
        <property name="beginningDelimiter" value="`" />
        <property name="endingDelimiter" value="`" />
        <!--配置是否使用通用 Mapper 自带的注释扩展，默认 true-->
        <!--<property name="useMapperCommentGenerator" value="false"/>-->

        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="com.eppear.baiju.backstage.dao.config.MyMapper"/>
        </plugin>
        <!-- 此处是将UserMapper改名为UserDao 接口 当然 想改成什么都行~  -->
        <plugin type="com.eppear.baiju.common.mgr.RenameJavaMapperPlugin">
            <property name="searchString" value="Mapper$" />
            <property name="replaceString" value="Dao" />
        </plugin>

        <!--数据库连接信息-->
        <jdbcConnection driverClass="${spring.datasource.driver-class-name}"
                        connectionURL="${spring.datasource.url}"
                        userId="${spring.datasource.username}"
                        password="${spring.datasource.password}">
            <!-- 配置此属性，使生成范围基于当前数据下-->
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

        <!-- java模型创建器，是必须要的元素
           负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
           targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
           targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
        -->
        <javaModelGenerator targetPackage="${mybatis.generator.model.package}"
                            targetProject="${mybaits.generator.project}" />

        <!--生成映射文件存放位置-->
        <!--同样Mac用户：targetProject 为全路径-->
        <sqlMapGenerator targetPackage="${mybatis.generator.sqlmap.package}"
                         targetProject="${mybatis.generator.sqlmap.project}" />

        <!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口
            targetPackage/targetProject:同javaModelGenerator
            type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：
                1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
                2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
                3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
            注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER
        -->
        <javaClientGenerator targetPackage="${mybatis.generator.client.package}"
                             targetProject="${mybaits.generator.project}" type="XMLMAPPER" />

        <!-- 配置表信息 -->
        <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类 -->
        <table tableName="%" delimitAllColumns="">
            <generatedKey column="id" sqlStatement="Mysql" identity="true" />
            <!--表名的前缀去掉-->
            <domainObjectRenamingRule searchString="^T" replaceString="" />
        </table>
        <!--<table tableName="t_wx_water_userbind" >
            <generatedKey column="id" sqlStatement="Mysql" identity="true" />
        </table>
        <table tableName="t_wx_cms_text">
          <generatedKey column="id" sqlStatement="Mysql" identity="true" />
        </table>
         <table tableName="%">
            <generatedKey column="id" sqlStatement="Mysql" identity="true" />
        </table> -->
    </context>
</generatorConfiguration>