/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

 // 本构建脚本内部使用的部分
 buildscript {

 }

// 所有项目共享的插件
plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'idea'
    id 'eclipse'
}

// 自定义属性声明，如版本号
ext {
	linkHomepage = 'http://www.eppear.com/baiju'
	linkCi       = 'https://build.spring.io/browse/SPR'
	linkIssue    = 'https://github.com/jianengzhn/baiju/issues'
	linkScmUrl   = 'https://github.com/jianengzhn/baiju'

	aspectjVersion       = "1.8.13"
	freemarkerVersion    = "2.3.27-incubating"
	groovyVersion        = "2.4.15"
	tomcatVersion        = "8.5.31"
    
	gradleScriptDir = "${rootProject.projectDir}/gradle"
}

 /*公共配置，所有项目*/
configure(allprojects) { project ->
    /* 项目属性信息*/
    group = 'com.eppear'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'

    /*配置公用仓库，从下到上优先级升高*/
    // 由于全局参数已配置，项目中可以去掉
    /*
    repositories{
        mavenLocal()
        maven {
            name "阿里云公共仓库"
            url "https://maven.aliyun.com/repository/public/"
        }
        mavenCentral()
        jcenter()
        maven{
            name "spring仓库快照(snapshot)"
            url "https://repo.spring.io/snapshot"
        }
        maven{
            name "spring仓库里程碑(milestone)"
            url "https://repo.spring.io/milestone"
        }
        maven{
            name "pdf转换仓库"
            url "http://oss.jfrog.org/artifactory/oss-snapshot-local/"
        }
    }
    */

    /*公共基础依赖*/
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    /* 构建信息*/
    springBoot {
        buildInfo {
            properties {
                artifact = 'baiju'
                version = '1.0.0'
                group = 'com.eppear'
                name = 'BaiJu System'                
            }
        }
    }

    // 相关连接
    ext.javadocLinks = [
		"http://docs.oracle.com/javase/8/docs/api/",
		"http://docs.oracle.com/javaee/7/api/",
		"http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/",  // CommonJ
		"http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/",
		"http://glassfish.java.net/nonav/docs/v3/api/",
		"http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/",
		"http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/",
		"http://tiles.apache.org/tiles-request/apidocs/",
		"http://tiles.apache.org/framework/apidocs/",
		"http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/",
		"http://ehcache.org/apidocs/2.10.4",
		"http://quartz-scheduler.org/api/2.2.1/",
		"http://fasterxml.github.io/jackson-core/javadoc/2.8/",
		"http://fasterxml.github.io/jackson-databind/javadoc/2.8/",
		"http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/",
		"http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/"
	] as String[]
}

// 配置根项目属性
configure(rootProject) {
	description = "BaiJu Sytem"

	apply plugin: "groovy"

	// don't publish the default jar for the root project
	configurations.archives.artifacts.clear()

	// 自定义任务
    task showRepos {
        group = "自定义任务" 
        description= "查看仓库配置"
        doLast{
            println "  仓库列表为："
            repositories.each{
                println "     ${it.name} - ${it.url}"
            }            
        }
    }
}

/* 子项目的专用配置
  通过  it.name == ''的方式来指定子项目名称
*/
configure(subprojects.findAll { it.name == 'greeter' || it.name == 'greeting-library' }) {

}